# @summary Interface class to manage k3s installation
#
# This class is reponsible to call the install or uninstall classes
#
# @param ensure
#     Ensure if present or absent.
# @param version
#     Version to install. Can either be a specific version or a release channel (stable or latest).
# @param operation_mode
#     Specify if k3s should be installed as server or agent.
#     (Only for installation_mode = 'script'.)
# @param token
#     Token to use as shared secret to join the cluster. Will be autogenerated if not provided.
#     (Only for installation_mode = 'script'.)
# @param server
#     Server URL of the master node. (Only required for $type = 'agent'.)
#     Format: https://192.168.1.11:6443 or https://k3s-master:6443
#     (Only for installation_mode = 'script'.)
# @param config
#     Custom k3s config.
# @param custom_server_args
#     Custom server arguments to use
#     (Only for installation_mode = 'script' and operation_mode = 'server'.)
# @param custom_agent_args
#     Custom agent arguments to use
#     (Only for installation_mode = 'script' and operation_mode = 'agent'.)
#
# @example Standalone server
#   include k3s
#
# @example Server (in server + agent setup)
#   class { 'k3s':
#     token => 's3cret',
#   }
#
# @example Agent (in server + agent setup)
#   class { 'k3s':
#     type   => 'agent',
#     token  => 's3cret',
#     server => 'https://k3s-master:6443'
#   }
class k3s (
  Enum['present', 'absent'] $ensure             = present,
  String                    $version            = 'stable',
  Enum['server', 'agent']   $operation_mode     = 'server',
  Optional[String]          $token              = undef,
  Optional[String]          $server             = undef,
  Hash                      $server_config      = {},
  Hash                      $agent_config       = {},
  String                    $custom_server_args = '',
  String                    $custom_agent_args  = '',
) {
  if $ensure == 'present' {
    include k3s::install
  } else {
    include k3s::uninstall
  }
}
